{"ast":null,"code":"var _jsxFileName = \"/Users/brendanhowell/class/google-books/books/client/src/pages/books.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { Link } from \"react-router-dom\";\n\nclass Books extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n\n    this.loadBooks = () => {\n      API.getBooks().then(res => this.setState({\n        books: res.data.books,\n        title: \"\",\n        author: \"\",\n        synopsis: \"\"\n      })).catch(err => console.log(err));\n    };\n\n    this.deleteBook = id => {\n      API.deleteBook(id).then(res => this.loadBooks()).catch(err => console.log(err));\n    };\n\n    this.handleInputChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.title) {\n        API.search({\n          book: this.state.book // title: this.state.title,\n          // author: this.state.author,\n          // synopsis: this.state.synopsis\n\n        }).then(res => this.loadBooks()).catch(err => console.log(err));\n      }\n    };\n\n    this.renderBooks = () => {\n      if (this.state.books.length <= 0) {\n        return React.createElement(List, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, this.state.books.map(book => React.createElement(ListItem, {\n          key: book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/books/\" + book._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, book.title, \" by \", book.author)), React.createElement(DeleteBtn, {\n          onClick: () => this.deleteBook(book._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }))));\n      } else return React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"No Results to Display\");\n    };\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Book Search\")), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Search A Book\"), React.createElement(\"input\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Col, {\n      size: \"md-6 sm-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Results\")), this.renderBooks)));\n  }\n\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/brendanhowell/class/google-books/books/client/src/pages/books.js"],"names":["React","Component","Jumbotron","API","DeleteBtn","Col","Row","Container","List","ListItem","Input","TextArea","FormBtn","Link","Books","state","books","title","author","synopsis","loadBooks","getBooks","then","res","setState","data","catch","err","console","log","deleteBook","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","search","book","renderBooks","length","map","_id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport { Link } from \"react-router-dom\";\n\nclass Books extends Component {\n    state = {\n      books: [],\n      title: \"\",\n      author: \"\",\n      synopsis: \"\"\n    };\n  \n    componentDidMount() {\n        this.loadBooks();\n      }\n\n    loadBooks = () => {\n        API.getBooks()\n          .then(res =>\n            this.setState({ books: res.data.books, title: \"\", author: \"\", synopsis: \"\" })\n          )\n          .catch(err => console.log(err));\n      };\n\n    deleteBook = id => {\n        API.deleteBook(id)\n          .then(res => this.loadBooks())\n          .catch(err => console.log(err));\n      };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        });\n      };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.title) {\n          API.search({\n            book: this.state.book,\n            // title: this.state.title,\n            // author: this.state.author,\n            // synopsis: this.state.synopsis\n          })\n            .then(res => this.loadBooks())\n            .catch(err => console.log(err));\n        }\n      };\n\n    renderBooks = () => {\n        if (this.state.books.length <= 0) {\n          return (\n            <List>\n              {this.state.books.map(book => (\n                <ListItem key={book._id}>\n                  <Link to={\"/books/\" + book._id}>\n                    <strong>\n                      {book.title} by {book.author}\n                    </strong>\n                  </Link>\n                  <DeleteBtn onClick={() => this.deleteBook(book._id)} />\n                </ListItem>\n              ))}\n            </List>\n          )\n        } else return <h3>No Results to Display</h3> \n      }\n\n      render() {\n        return (\n          <Container fluid>\n            <Row>\n              <Col size=\"md-6\">\n                <Jumbotron>\n                  <h1>Book Search</h1>\n                </Jumbotron>\n\n                <h1>Search A Book</h1>\n                <input></input>\n                <button>Search</button>\n                {/* <form>\n                  <Input\n                    value={this.state.title}\n                    onChange={this.handleInputChange}\n                    name=\"title\"\n                    placeholder=\"Title (required)\"\n                  />\n                  <FormBtn\n                    disabled={!(this.state.title)}\n                    onClick={this.handleFormSubmit}\n                  >\n                    Submit Book\n                  </FormBtn>\n                </form> */}\n              </Col>\n              <Col size=\"md-6 sm-12\">\n                <Jumbotron>\n                  <h1>Results</h1>\n                </Jumbotron>\n                {this.renderBooks}\n              </Col>\n            </Row>\n          </Container>\n        );\n      }\n    }\n\nexport default Books;"]},"metadata":{},"sourceType":"module"}